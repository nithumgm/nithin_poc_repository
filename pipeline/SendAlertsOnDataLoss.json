{
	"name": "SendAlertsOnDataLoss",
	"properties": {
		"activities": [
			{
				"name": "Get OldRowCount",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "ds_ba_poc_adls_delimit",
						"type": "DatasetReference",
						"parameters": {
							"dsparamFileName": "TablewiseRecordCount.csv",
							"dsparamContainerName": "poc",
							"dsparamDirectoryName": "configfiles",
							"dsparamColumDelimitter": ","
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Filter Table",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get OldRowCount",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get OldRowCount').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(concat(item().SchemaName,'.',item().TableName),pipeline().parameters.pipelineParamTableName)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Filter Table",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get NewRowCount",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(activity('Filter Table').output.Value[0].RowsCount,activity('Get NewRowCount').output.firstRow.RowsCount)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Send Email Alerts",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "FilterSuccess",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://prod-13.centralus.logic.azure.com:443/workflows/f0dbfe30eae44aeba8cfd32866a55c6d/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=v-dIAay8NWXK0eiyDxJZNoE86eq3GzK1Q1ghL9Xq7zc",
								"connectVia": {
									"referenceName": "AutoResolveIntegrationRuntime",
									"type": "IntegrationRuntimeReference"
								},
								"method": "POST",
								"headers": {
									"Content-Type": "application/json"
								},
								"body": {
									"value": "{\n    \"Title\":\"@{activity('FilterSuccess').output.Value[0].Subject}\",\n    \"Color\":\"@{activity('FilterSuccess').output.Value[0].AlertColor}\",\n    \"RecieverEmailID\":\"@{activity('FilterSuccess').output.Value[0].RecieverEmailID}\",\n    \"PipelineName\":\"@{pipeline().Pipeline}\",\n    \"SynapseWorkSpaceName\": \"@{pipeline().DataFactory}\",\n    \"PipelineRunID\":\"@{pipeline().RunId}\",\n    \"ExecuctionTime\":\"@{pipeline().TriggerTime}\",\n    \"ErrorMessage\":\"Pipeline Executed Successfully\",\n    \"EmailBody\":\"@{activity('FilterSuccess').output.Value[0].EmailBody}\",\n    \"EmailBodyFooter\":\"@{activity('FilterSuccess').output.Value[0].EmailBodyFooter}\"\n\n}",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Lookup Config File",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"modifiedDatetimeStart": "2022-12-29T00:00:00.129Z",
										"modifiedDatetimeEnd": "2022-12-29T00:00:00.066Z",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"dataset": {
									"referenceName": "ds_ba_poc_adlsgen2_json",
									"type": "DatasetReference",
									"parameters": {
										"dsparamFileName": "EmailAlertsConfig.json",
										"dsparamContainerName": "poc",
										"dsparamDirectoryName": "configfiles"
									}
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "FilterSuccess",
							"type": "Filter",
							"dependsOn": [
								{
									"activity": "Lookup Config File",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@activity('Lookup Config File').output.value",
									"type": "Expression"
								},
								"condition": {
									"value": "@and(equals(item().AlertType,'DataLoss'),equals(item().PipelineName,pipeline().Pipeline))",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Get NewRowCount",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlPoolSource",
						"sqlReaderQuery": {
							"value": "SELECT COUNT(*) as RowsCount\nFROM @{pipeline().parameters.pipelineParamTableName}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "ds_ba_poc_synsql",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			}
		],
		"parameters": {
			"pipelineParamTableName": {
				"type": "string",
				"defaultValue": "production.brands"
			}
		},
		"annotations": []
	}
}