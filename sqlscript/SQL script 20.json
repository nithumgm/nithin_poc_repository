{
	"name": "SQL script 20",
	"properties": {
		"content": {
			"query": "WITH base\nAS\n(\nSELECT\n DB_ID()                                                           AS  [db_id]\n ,DB_NAME()                                                            AS  [database_name]\n,s.[schema_id]                                                         AS [schema_id]\n, s.name                                                               AS  [schema_name]\n,t.OBJECT_ID                                                            AS  [table_id]\n, t.name                                                               AS  [table_name]\n, nps.[in_row_data_page_count]\n    + nps.[row_overflow_used_page_count]\n    + nps.[lob_used_page_count]                                        AS  [data_space_page_count]\n, Sum(nps.[row_count])                                                     AS  [row_count]\nfrom\n    sys.schemas s\nINNER JOIN sys.tables t\n    ON s.[schema_id] = t.[schema_id]\n\nINNER JOIN sys.pdw_permanent_table_mappings tm\n    ON t.[object_id] = tm.[object_id]\nINNER JOIN sys.pdw_nodes_tables nt\n    ON tm.[physical_name] = nt.[name]\nINNER JOIN sys.dm_pdw_nodes pn\n    ON  nt.[pdw_node_id] = pn.[pdw_node_id]\n\nINNER JOIN sys.dm_pdw_nodes_db_partition_stats nps\n    ON nt.[object_id] = nps.[object_id]\n    AND nt.[pdw_node_id] = nps.[pdw_node_id]\n    AND nt.[distribution_id] = nps.[distribution_id]\n\nWHERE pn.[type] = 'COMPUTE'\ngroup by \ns.[schema_id] \n, s.name     \n, t.name \n,t.OBJECT_ID        \n,nps.[in_row_data_page_count]\n    + nps.[row_overflow_used_page_count]\n    + nps.[lob_used_page_count]\n\n)\n, size\nAS\n(\nSELECT\n  \n [database_name]\n,  [schema_name]\n,  [table_name]\n,  ([data_space_page_count]     * 8.0)                                 AS [data_space_KB]\n\nFROM base\n)\nSELECT *\nFROM size\n;",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "nithin_poc_sqlpool",
				"poolName": "nithin_poc_sqlpool"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}